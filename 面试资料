-----------------------------------------------------------------HTML/CSS------------------------------------------------------------------------------------
1、H5新标签、属性
canvas audio video  datalist command  details   keygen  input新属性 （password  placeholder maxlength）

2、什么是盒子模型？
在网页中，一个元素占有空间的大小由几个部分构成，其中包括元素的内容（content），元素的内边距（padding），元素的边框（border），元素的外边距（margin）四个部分。
这四个部分占有的空间中，有的部分可以显示相应的内容，而有的部分只用来分隔相邻的区域或区域。4个部分一起构成了css中元素的盒模型。

3、行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？
	行内元素：a、b、span、img、input、strong、select、label、em、button、textarea
	块级元素：div、ul、li、dl、dt、dd、p、h1-h6、blockquote
	空元素：即系没有内容的HTML元素，例如：br、meta、hr、link、input、img

4、 css 实现垂直水平居中
	 （1）绝对定位+margin：auto  position:absolute; margin:auto;top:0 ;
	 （2） flex 父元素 display：flex;  align-items:center;  justify-content:center;
	 （3） 绝对定位+transform反向偏移
	  (4) 绝对定位+margin反向偏移
	 （5） display：table
	 
5、简述一下src与href的区别
	src会下载  href只是一个超链接

6、px和em的区别
	px固定宽度、em值不固定 浏览器默认16px 意味着默认1em=16px
	
7、浏览器的内核分别是什么?
	IE: trident内核
	Firefox：gecko内核
	Safari：webkit内核
	Opera：以前是presto内核，Opera现已改用Google Chrome的Blink内核
	Chrome：Blink(基于webkit，Google与Opera Software共同开发
	
8、自适应布局
	flex：0 1 auto； （flex-grow：0；flex-shrink：1；flex-basis:auto）
	flex-flow:flex-direction:row;flex-wrap:nowrap;
	align-itmes:center
	justify-content:center | flex-start |flex-end| space-between |space-around
	

9、hack兼容

10、清除浮动
	父元素下添加空标签clear:both;
	伪类：after；

11、iframe的优缺点？
		优点：a、页面无需刷新，直接加载进来
			  b、嵌入页面比较方便
			  c、跨域通信比较方便
		缺点：多个页面不好管理、浏览器后退无效；增加http请求

12、列举几种隐藏元素的方法
	visibility·：hidden
	display：none；
	opacity:0
	height:0;overflow:hidden;
	
13、如何让一段文本中的所有英文单词的首字母大写

14、请简述CSS样式表继承
	1、外部样式 link标签
	2、内页样式：style标签
	3、行内样式：标签style属性；
	从CSS代码存放位置看权重优先级：内嵌样式 > 内部样式表 > 外联样式表；
	从样式选择器看权重优先级：important > 内嵌样式 > ID > 类 > 标签 | 伪类 | 属性选择 > 伪对象 > 继承 > 通配符。
		important的权重为1,0,0,0
		ID的权重为0,1,0,0
		类的权重为0,0,1,0
		标签的权重为0,0,0,1
		伪类的权重为0,0,1,0
		属性的权重为0,0,1,0
		伪对象的权重为0,0,0,1
		通配符的权重为0,0,0,0
15、请简述CSS的选择器
		id选择器
		类选择器
		属性选择器
		伪类选择器
16、浏览器兼容性
	a. 浏览器默认的margin和padding不同
	b. IE6双边距bug
	c. 在ie6，ie7中元素高度超出自己设置高度。原因是IE8以前的浏览器中会给元素设置默认的行高的高度导致的
	d. min-height在IE6下不起作用
	e. 透明性IE用filter:Alpha(Opacity=60)，而其他主流浏览器用 opacity:0.6
	f. input边框问题，去掉input边框一般用border:none;就可以，但由于IE6在解析input样式时的BUG(优先级问题)，在IE6下无效
17、样式伪类和伪对象
		伪类：:active  :selected  :disabled  :checked   :first-child  :nth-child(1) :nth-of-type();
		伪对象：::before  ::after  :;selection  ::first-line
-----------------------------------------------------------------------JS------------------------------------------------------------------------------
1、元素的创建、删除、查找节点
	createDocumentFragment() 文档碎片   createElement（） createTextNode（）
	appendChild removeChild（） replaceChild（） insertBefore()
	getElementById() getElementByTagName() getElementByName() querySelector();

2、可以对JavaScript中的5种主要的数据类型（包括Number、String、Object、Array、Boolean）进行值复制。
	intanceof（Aarry）  循坏 递归
3、array数组去重方法有哪些	
		1）双重for循坏
		2）数组的indexOf(arr[i])<0;
		3）数组的filter方法；
		4）sort方法排序，比较相邻的两个
		5）Obj key值去重复
4、数组、字符串方法
	  array：pop push  shift unshift splice concat  reverse sort join  toString
	  string：slice split valueOf  toString toLowerCase toUpperCase  substr substring  indexOf  lastIndexOf conCat replace 

5、Javascript中callee和caller 的作用？	  
	 function.caller  调用该函数的函数
	 arguments.callee 函数本身
	
6、cookies，sessionStorage和localStorage 、cacheStorage的区别
		sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。
		localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。
	    cookies每次请求都发送，大小4k，不能跨域
		
7、统计字符串中字母个数或统计最多字母数。

8、jQuery的事件委托方法on、live、delegate之间有什么区别？
	jquery9以后用on

9、如何理解闭包？
	

10、 跨域请求资源的方法有哪些？

11、 谈谈垃圾回收机制方式及内存管理

12、开发过程中遇到的内存泄露情况，如何解决的？

13、事件模型及事件代理/委托

14、call apply  bind的相同不同之处手写Function.bind函数
	var a={
			user:"zhao",
            fn:function(x,y){console.log(this.user);}			
		}
	var b=a.fn;
	b.call(a,arg1,arg2...)
	b.apply(a,[]);
	b.bind(a,arg1,arg2...) 不会立即执行

15、JS的定义提升

16、将url的查询参数解析成字典对象
	function getQueryObject(url) {
    url = url == null ? window.location.href : url;
    var search = url.substring(url.lastIndexOf("?") + 1);
    var obj = {};
    var reg = /([^?&=]+)=([^?&=]*)/g;
    search.replace(reg, function (rs, $1, $2) {
        var name = decodeURIComponent($1);
        var val = decodeURIComponent($2);                
        val = String(val);
        obj[name] = val;
        return rs;
    });
    return obj;
}
17、节流函数

18、JS如何实现面向对象和继承机制？
		创建对象方法：
		a. 利用json创建对象
		b. 使用JavaScript中的Object类型
		c. 通过创建函数来生成对象

		继承机制：
		a. 构造函数绑定，使用call或apply方法，将父对象的构造函数绑定在子对象上
		b. prototype模式，继承new函数的模式
		c. 直接继承函数的prototype属性，对b的一种改进
		d. 利用空对象作为中介
		e. 在ECMAScript5中定义了一个新方法Object.create()，用于创建一个新方法
		f. 拷贝继承，把父对象的所有属性和方法，拷贝进子对象，实现继承。参考《JavaScript中的对象克隆》


19、JS模块的封装方法，比如怎样实现私有变量，不能直接赋值，只能通过公有方法
		a. 通过json生成对象的原始模式，多写几个就会非常麻烦，也不能反映出它们是同一个原型对象的实例
		b. 原始模式的改进，可以写一个函数，解决代码重复的问题。同样不能反映出它们是同一个原型对象的实例
		c. 构造函数模式，就是一个普通函数，不过内部使用了this变量，但是存在一个浪费内存的问题。
		d. Prototype模式，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承，可以把那些不变的属性和方法，
		   直接定义在prototype对象上。Prototype模式的验证方法：isPrototypeOf()、hasOwnProperty()和in运算符。

20、对this指针的理解，可以列举几种使用情况？
		this实际上是在函数被调用时发生的绑定，它指向什么完全取决于函数在哪里被调用。
		this指的是：调用函数的那个对象。
		a. 纯粹的函数调用，属于全局性调用，因此this就代表全局对象Global。
		b. 作为对象方法的调用，这时this就指这个上级对象。
		c. 作为构造函数调用，就是通过这个函数new一个新对象（object）。这时，this就指这个新对象。
		d. apply与call的调用，它们的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象。

21、在JavaScript中，常用的绑定事件的方法有哪些？
		a. 在DOM元素中直接绑定，DOM元素，可以理解为HTML标签，onXXX="JavaScript Code"，查看事件列表。
		b. 在JavaScript代码中绑定，elementObject.onXXX=function(){}，通称为DOM0事件系统。
		c. 绑定事件监听函数，标准浏览器使用 addEventListener() ，IE11以下版本attachEvent() 来绑定事件监听函数，通称为DOM2事件系统。


22、解释下javascript的冒泡和捕获
		<div id="click1">
		  <div id="click2">
			 <div id="click3">事件</div>
		  </div>
		</div>
		a. Netscape主张元素1的事件首先发生，这种事件发生顺序被称为捕获型
		b. 微软则保持元素3具有优先权，这种事件顺序被称为冒泡型
		c. W3C选择了一个择中的方案。任何发生在w3c事件模型中的事件，首是进入捕获阶段，直到达到目标元素，再进入冒泡阶段
		事件监听函数addEventListener()的第三个参数就是控制方法是捕获还是冒泡


23：判断对象类型的方法
	1）typeof  null {} [] 均输入object
	2）Object.prototype.toString.call 
	3）[].contructor==Array
	4) obj intanceof Array  只能判断对象和数组
	
	
-------------------------------------------------------------HTTP WEB安全 性能----------------------------------------------
http：
	一次完整的HTTP事务是怎样的一个过程？

基本流程：
	a. 域名解析
	b. 发起TCP的3次握手
	c. 建立TCP连接后发起http请求
	d. 服务器端响应http请求，浏览器得到html代码
	e. 浏览器解析html代码，并请求html代码中的资源
	f. 浏览器对页面进行渲染呈现给用户
	HTTP的状态码有哪些？

	HTTPS是如何实现加密？
		
算法
	手写数组快速排序、冒泡排序，插入排序
	JavaScript实现二分法查找
	
web安全
	（1）XSS（Cross-Site Scripting，跨站脚本攻击）：指通过存在安全漏洞的Web网站注册用户的浏览器内运行非法的HTML标签或者JavaScript进行的一种攻击。
	（2）SQL注入攻击
	（3）CSRF（Cross-Site Request Forgeries，跨站点请求伪造）：指攻击者通过设置好的陷阱，强制对已完成的认证用户进行非预期的个人信息或设定信息等某些状态更新。
	
前端性能优化	
   如何优化图像、图像格式的区别？
   浏览器是如何渲染页面的？

设置模式对MVC、MVVM的理解
